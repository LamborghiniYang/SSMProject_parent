<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans          
    http://www.springframework.org/schema/beans/spring-beans.xsd          
    http://www.springframework.org/schema/security          
    http://www.springframework.org/schema/security/spring-security.xsd">

	<!--配置未登录放行的资源-->
	<security:http pattern="/login.jsp" security="none"></security:http>
	<security:http pattern="/failer.jsp" security="none"></security:http>
	<security:http pattern="/css/**" security="none"></security:http>
	<security:http pattern="/img/**" security="none"></security:http>
	<security:http pattern="/pages/**" security="none"></security:http>
	<security:http pattern="/plugins/**" security="none"></security:http>


	<!--配置拦截的规则和放行的条件
	auto-config="true" 支持框架的默认配置
	use-expressions="false" 关闭表达式的使用
	intercept-url pattern="/**" 拦截工程的所有请求
	access="ROLE_ADMIN" 表示拥有ROLE_ADMIN的角色用户可以访问
	-->
	<security:http auto-config="true" use-expressions="true">
		<security:intercept-url pattern="/**" access="hasAnyRole('ROLE_ADMIN','ROLE_SUPER','ROLE_PRODUCT','ROLE_ORDER','ROLE_USER')"></security:intercept-url>
		<!--自定义页面的form表单节点
		login-page="/login.jsp" 自定义登录页
		login-processing-url 登录页面表单的请求路径
		authentication-failure-url 认证失败的路径
		default-target-url  登录成功默认页面
		-->
		<security:form-login  login-page="/login.jsp"
							 	login-processing-url="/login"
							    authentication-failure-url="/failer.jsp"
							    default-target-url="/index.jsp"></security:form-login>
		<!--登录成功，权限不足的页面-->
		<security:access-denied-handler error-page="/403.jsp"></security:access-denied-handler>
		<!--关闭跨域请求的拦截-->
		<security:csrf disabled="true"></security:csrf>
		<!--退出/注销用户-->
        <security:logout logout-url="/logout" logout-success-url="/login.jsp" invalidate-session="true"/>
	</security:http>

	<!--配置验证的节点-->
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="userServiceImpl">
			<!--加入密码的加密映射-->
			<security:password-encoder ref="passwordEncoder"/>
		</security:authentication-provider>
	</security:authentication-manager>


	<!--配置加密类-->
<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
</beans>